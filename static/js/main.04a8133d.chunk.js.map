{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","onFormChange","e","currentTarget","value","setState","onSubmitForm","preventDefault","props","onSubmit","resetForm","this","htmlFor","type","pattern","title","required","onChange","id","Component","ContactList","contacts","map","Filter","App","filter","formSubmitHandler","data","console","log","changeFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGV,EAAOS,K,EAIZE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMa,SAAUE,KAAKL,aAArB,UACE,wBAAOM,QAASD,KAAKd,YAArB,iBAEE,uBACEgB,KAAK,OACLlB,KAAK,OACLS,MAAOO,KAAKjB,MAAMC,KAClBmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUN,KAAKV,aACfiB,GAAIP,KAAKd,iBAGb,wBAAOe,QAASD,KAAKX,cAArB,mBAEE,uBACEa,KAAK,MACLlB,KAAK,SACLS,MAAOO,KAAKjB,MAAME,OAClBkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUN,KAAKV,aACfiB,GAAIP,KAAKX,mBAGb,wBAAQa,KAAK,SAAb,gC,GAzDkBM,aA+DX1B,ICtDA2B,MAZf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,OACE,6BACGA,EAASC,KAAI,gBAAGJ,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,KACWC,IADFsB,SCKFK,MATf,YAAsC,IAApBnB,EAAmB,EAAnBA,MAAOa,EAAY,EAAZA,SACvB,OACE,0DAEE,uBAAOJ,KAAK,OAAOT,MAAOA,EAAOa,SAAUA,QCE3CO,E,4MACJ9B,MAAQ,CACN2B,SAAU,CACR,CAAEH,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,cAEhD6B,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAClBC,QAAQC,IAAIF,I,EAGdG,aAAe,SAAA5B,GACb,EAAKG,SAAS,CAAEoB,OAAQvB,EAAEC,cAAcC,S,4CAG1C,WACE,OACE,gCACE,2CACA,cAAC,EAAD,CAAaK,SAAUE,KAAKe,oBAC5B,0CACA,cAAC,EAAD,CAAQtB,MAAOO,KAAKjB,MAAM+B,OAAQR,SAAUN,KAAKmB,eACjD,cAAC,EAAD,CAAaT,SAAUV,KAAKjB,MAAM2B,kB,GA1BxBF,aAgCHK,ICjCfO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.04a8133d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  onFormChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmitForm = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmitForm}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.onFormChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.onFormChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","function ContactList({ contacts }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","function Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange}></input>\n    </label>\n  );\n}\n\nexport default Filter;\n","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList contacts={this.state.contacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}