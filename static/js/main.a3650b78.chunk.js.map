{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","addContact","newContactId","newContact","id","props","onSubmit","checkContactList","contacts","normalizedName","toLocaleLowerCase","find","contact","alert","onFormChange","e","currentTarget","value","setState","onSubmitForm","preventDefault","resetForm","this","htmlFor","type","placeholder","pattern","title","required","onChange","Component","ContactList","onDeleteContact","map","onClick","Filter","App","filter","deleteContact","contactId","prev","formSubmitHandler","changeFilter","getFilteredContacts","normalizedFilter","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,WAAa,WACX,IAAMC,EAAeJ,IAAQC,WAC7B,EAAyB,EAAKL,MACxBS,EAAa,CAAER,KADrB,EAAQA,KACmBC,OAD3B,EAAcA,OACqBQ,GAAIF,GACvC,EAAKG,MAAMC,SAASH,I,EAGtBI,iBAAmB,WACjB,IAAQC,EAAa,EAAKH,MAAlBG,SACAb,EAAS,EAAKD,MAAdC,KACFc,EAAiBd,EAAKe,oBAC5BF,EAASG,MACP,SAAAC,GAAO,OAAIA,EAAQjB,KAAKe,sBAAwBD,KAE9CI,MAAM,GAAD,OAAIlB,EAAJ,4BACL,EAAKM,c,EAGXa,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBrB,EAAR,EAAQA,KAAMsB,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGvB,EAAOsB,K,EAIZE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,YACL,EAAKd,oB,EAGPc,UAAY,WACV,EAAKH,SAAS,CAAEvB,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMU,SAAUgB,KAAKH,aAArB,UACE,wBAAOI,QAASD,KAAKzB,YAArB,iBAEE,uBACE2B,KAAK,OACL7B,KAAK,OACL8B,YAAY,wFACZR,MAAOK,KAAK5B,MAAMC,KAClB+B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUP,KAAKR,aACfV,GAAIkB,KAAKzB,iBAGb,wBAAO0B,QAASD,KAAKtB,cAArB,mBAEE,uBACEwB,KAAK,MACL7B,KAAK,SACL8B,YAAY,YACZR,MAAOK,KAAK5B,MAAME,OAClB8B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUP,KAAKR,aACfV,GAAIkB,KAAKtB,mBAGb,wBAAQwB,KAAK,SAAb,gC,GA5EkBM,aAkFXrC,ICxEAsC,MAbf,YAAqD,IAA9BvB,EAA6B,EAA7BA,SAAUwB,EAAmB,EAAnBA,gBAC/B,OACE,6BACGxB,EAASyB,KAAI,gBAAG7B,EAAH,EAAGA,GAAIT,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,KACWC,EACT,wBAAQsC,QAAS,kBAAMF,EAAgB5B,IAAvC,sBAFOA,SCKF+B,MATf,YAAsC,IAApBlB,EAAmB,EAAnBA,MAAOY,EAAY,EAAZA,SACvB,OACE,0DAEE,uBAAOL,KAAK,OAAOP,MAAOA,EAAOY,SAAUA,QCE3CO,E,4MACJ1C,MAAQ,CACNc,SAAU,CACR,CAAEJ,GAAI,OAAQT,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEQ,GAAI,OAAQT,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEQ,GAAI,OAAQT,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEQ,GAAI,OAAQT,KAAM,iBAAkBC,OAAQ,cAEhDyC,OAAQ,I,EAGVC,cAAgB,SAAAC,GACd,EAAKrB,UAAS,SAAAsB,GAAI,MAAK,CACrBhC,SAAUgC,EAAKhC,SAAS6B,QAAO,SAAAzB,GAAO,OAAIA,EAAQR,KAAOmC,U,EAI7DE,kBAAoB,SAAA7B,GAClB,IAAQJ,EAAa,EAAKd,MAAlBc,SACR,EAAKU,SAAS,CAAEV,SAAS,CAAEI,GAAH,mBAAeJ,O,EAGzCkC,aAAe,SAAA3B,GACb,EAAKG,SAAS,CAAEmB,OAAQtB,EAAEC,cAAcC,S,EAG1C0B,oBAAsB,WACpB,IAAMC,EAAmB,EAAKlD,MAAM2C,OAAO3B,oBAC3C,OAAO,EAAKhB,MAAMc,SAAS6B,QAAO,SAAAzB,GAAO,OACvCA,EAAQjB,KAAKe,oBAAoBmC,SAASD,O,4CAI9C,WACE,IAAQpC,EAAac,KAAK5B,MAAlBc,SACR,OACE,gCACE,2CACA,cAAC,EAAD,CAAaF,SAAUgB,KAAKmB,kBAAmBjC,SAAUA,IACzD,0CACA,cAAC,EAAD,CAAQS,MAAOK,KAAK5B,MAAM2C,OAAQR,SAAUP,KAAKoB,eACjD,cAAC,EAAD,CACElC,SAAUc,KAAKqB,sBACfX,gBAAiBV,KAAKgB,uB,GA3CdR,aAkDHM,ICnDfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a3650b78.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  addContact = () => {\n    const newContactId = shortid.generate();\n    const { name, number } = this.state;\n    const newContact = { name, number, id: newContactId };\n    this.props.onSubmit(newContact);\n  };\n\n  checkContactList = () => {\n    const { contacts } = this.props;\n    const { name } = this.state;\n    const normalizedName = name.toLocaleLowerCase();\n    contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\n    )\n      ? alert(`${name} is already in contacts`)\n      : this.addContact();\n  };\n\n  onFormChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmitForm = e => {\n    e.preventDefault();\n    this.resetForm();\n    this.checkContactList();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmitForm}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Григор Григорян\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.onFormChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"111-22-33\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.onFormChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","function Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange}></input>\n    </label>\n  );\n}\n\nexport default Filter;\n","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = contact => {\n    const { contacts } = this.state;\n    this.setState({ contacts: [contact, ...contacts] });\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} contacts={contacts} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getFilteredContacts()}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}