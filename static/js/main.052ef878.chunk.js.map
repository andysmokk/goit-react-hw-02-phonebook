{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","addContact","onFormChange","e","currentTarget","value","setState","onSubmitForm","preventDefault","props","onSubmit","resetForm","this","htmlFor","type","pattern","title","required","onChange","id","Component","ContactList","contacts","onDeleteContact","map","onClick","Filter","App","filter","deleteContact","contactId","prev","contact","formSubmitHandler","console","log","changeFilter","getFilteredContacts","normalizedFilter","toLocaleLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.052ef878.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n  // newContactId = shortid.generate();\n\n  addContact = () => {\n    const newContactId = shortid.generate();\n    const { name, number } = this.state;\n    const newContact = { name, number, id: newContactId };\n    // this.props.onSubmit(newContact);\n  };\n\n  onFormChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmitForm = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmitForm}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.onFormChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.onFormChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","function Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange}></input>\n    </label>\n  );\n}\n\nexport default Filter;\n","import './App.css';\nimport React, { Component } from 'react';\n// import shortid from 'shortid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = contact => {\n    const { contacts } = this.state;\n    this.setState({ contacts: [contact, ...contacts] });\n    console.log(contact);\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getFilteredContacts()}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}